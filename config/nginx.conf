user nginx;
worker_processes auto;
error_log /dev/stderr info;
pid /var/run/nginx.pid;
load_module "modules/ngx_mail_module.so";

events {
    worker_connections 1024;
}

http {
    # Standard HTTP configuration with slight hardening
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /dev/stdout;
    sendfile on;
    keepalive_timeout 65;
    server_tokens off;
    absolute_redirect off;
    resolver 127.0.0.11 valid=30s;

    # Header maps
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        '' $scheme;
    }


    # Enable the proxy for certbot if the flavor is letsencrypt and not on kubernetes
    server {
        # Listen over HTTP
        listen 80;
        listen [::]:80;

        location ^~ /.well-known/acme-challenge/ {
            proxy_pass http://127.0.0.1:8008;
        }

        # redirect to https
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main server
    server {
        # Variables for proxifying
        set $client client:3000;

        # Listen on HTTP only in kubernetes or behind reverse proxy
        # Only enable HTTPS if TLS is enabled with no error and not on kubernetes
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name penchev.dev www.penchev.dev;
        server_tokens off;

        include /etc/nginx/tls.conf;
        ssl_session_cache shared:SSLHTTP:50m;
        add_header Strict-Transport-Security 'max-age=31536000';

        location / {
            proxy_pass          http://$client;
            proxy_http_version  1.1;
            proxy_cache_bypass  $http_upgrade;

            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        "upgrade";
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;
        }
    }

    # API server
    server {
        # Variables for proxifying
        set $api api:5000;

        # Listen on HTTP only in kubernetes or behind reverse proxy
        # Only enable HTTPS if TLS is enabled with no error and not on kubernetes
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.penchev.dev www.api.penchev.dev;
        server_tokens off;

        include /etc/nginx/tls.conf;
        ssl_session_cache shared:SSLHTTP:50m;
        add_header Strict-Transport-Security 'max-age=31536000';

        location / {
            proxy_pass          http://$api;
            proxy_http_version  1.1;
            proxy_cache_bypass  $http_upgrade;

            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        "upgrade";
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;
        }
    }

    # Email server
    server {
        # Favicon stuff
        root /static;

        # Variables for proxifying
        set $admin admin;
        set $antispam antispam:11334;
        set $webmail webmail;

        # Listen on HTTP only in kubernetes or behind reverse proxy
        # Only enable HTTPS if TLS is enabled with no error and not on kubernetes
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name email.penchev.dev www.email.penchev.dev;

        include /etc/nginx/tls.conf;
        ssl_session_cache shared:SSLHTTP:50m;
        add_header Strict-Transport-Security 'max-age=31536000';


        if ($proxy_x_forwarded_proto = http) {
            return 301 https://$host$request_uri;
        }

        # Remove headers to prevent duplication and information disclosure
        proxy_hide_header X-XSS-Protection;
        proxy_hide_header X-Powered-By;

        add_header X-Frame-Options 'SAMEORIGIN';
        add_header X-Content-Type-Options 'nosniff';
        add_header X-Permitted-Cross-Domain-Policies 'none';
        add_header X-XSS-Protection '1; mode=block';
        add_header Referrer-Policy 'same-origin';

        # If TLS is failing, prevent access to anything except certbot
        include /overrides/*.conf;

        # Actual logic
        location / {
            try_files $uri /webmail;
        }

        location /webmail {

            rewrite ^(/webmail)$ $1/ permanent;
            rewrite ^/webmail/(.*) /$1 break;

            include /etc/nginx/proxy.conf;
            client_max_body_size 58388608;
            proxy_pass http://$webmail;
        }

        location /admin {
            return 301 /admin/ui;
        }

        location ~ /admin/(ui|static) {
            rewrite ^/admin/(.*) /$1 break;
            include /etc/nginx/proxy.conf;
            proxy_set_header X-Forwarded-Prefix /admin;
            proxy_pass http://$admin;
        }

        location /admin/antispam {
            rewrite ^/admin/antispam/(.*) /$1 break;
            auth_request /internal/auth/admin;
            proxy_set_header X-Real-IP "";
            proxy_set_header X-Forwarded-For "";
            proxy_pass http://$antispam;
        }

        location /internal {
            internal;

            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_pass http://$admin;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
        }

        location /health {
            return 204;
        }
    }

    # Forwarding authentication server
    server {
        # Variables for proxifying
        set $admin admin;

        listen 127.0.0.1:8000;

        location / {
            proxy_pass http://$admin/internal$request_uri;
        }
    }
}

mail {
    server_name penchev.dev;
    auth_http http://127.0.0.1:8000/auth/email;
    proxy_pass_error_message on;
    resolver 127.0.0.11 valid=30s;

    include /etc/nginx/tls.conf;
    ssl_session_cache shared:SSLMAIL:50m;

    # Advertise real capabilites of backends (postfix/dovecot)
    smtp_capabilities PIPELINING SIZE 50000000 ETRN ENHANCEDSTATUSCODES 8BITMIME DSN;
    pop3_capabilities TOP UIDL RESP-CODES PIPELINING AUTH-RESP-CODE USER;
    imap_capabilities IMAP4 IMAP4rev1 UIDPLUS SASL-IR LOGIN-REFERRALS ID ENABLE IDLE LITERAL+;

    # Default SMTP server for the webmail (no encryption, but authentication)
    server {
        listen 10025;
        protocol smtp;
        smtp_auth plain;
    }

    # Default IMAP server for the webmail (no encryption, but authentication)
    server {
        listen 10143;
        protocol imap;
        smtp_auth plain;
    }

    # SMTP is always enabled, to avoid losing emails when TLS is failing
    server {
        listen 25;
        listen [::]:25;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
        ssl_prefer_server_ciphers on;
        starttls on;

        protocol smtp;
        smtp_auth none;
    }

    # All other protocols are disabled if TLS is failing
    server {
        listen 143;
        listen [::]:143;

        starttls only;

        protocol imap;
        imap_auth plain;
    }

    server {
        listen 110;
        listen [::]:110;

        starttls only;

        protocol pop3;
        pop3_auth plain;
    }

    server {
        listen 587;
        listen [::]:587;

        starttls only;

        protocol smtp;
        smtp_auth plain login;
    }

    server {
        listen 465 ssl;
        listen [::]:465 ssl;
        protocol smtp;
        smtp_auth plain login;
    }

    server {
        listen 993 ssl;
        listen [::]:993 ssl;
        protocol imap;
        imap_auth plain;
    }

    server {
        listen 995 ssl;
        listen [::]:995 ssl;
        protocol pop3;
        pop3_auth plain;
    }
}
